name: Build and Deploy Main Website

on:
  release:
    types: [created]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      IMAGE_BASE: ${{ vars.REGISTRY_HOST }}/safekids-ai/web
      RELEASE_TAG: ${{ github.ref_name }} # e.g. v1.2.3
      SHORT_SHA: ${{ github.sha != '' && github.sha || 'unknown' }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_HOST }}
          username: ${{ vars.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Derive semver tags
        id: semver
        run: |
          TAG="${RELEASE_TAG#v}"         # strip leading v if present -> 1.2.3
          MAJOR="${TAG%%.*}"             # 1
          REST="${TAG#*.}"               # 2.3
          MINOR="${REST%%.*}"            # 2
          echo "full=v${TAG}" >> $GITHUB_OUTPUT
          echo "major=v${MAJOR}" >> $GITHUB_OUTPUT
          echo "minor=v${MAJOR}.${MINOR}" >> $GITHUB_OUTPUT

      - name: Build and push (multi tags)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/main-website-react/Dockerfile
          push: true
          # Always push immutable version + semver rollups + git sha
          tags: |
            ${{ env.IMAGE_BASE }}:${{ steps.semver.outputs.full }}
            ${{ env.IMAGE_BASE }}:${{ steps.semver.outputs.minor }}
            ${{ env.IMAGE_BASE }}:${{ steps.semver.outputs.major }}
            ${{ env.IMAGE_BASE }}:git-${{ env.SHORT_SHA }}
          labels: |
            org.opencontainers.image.title=snowslawnpro
            org.opencontainers.image.version=${{ steps.semver.outputs.full }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repository }}
          provenance: true
          sbom: true

      # Only move :latest if the GitHub release is not a prerelease
      - name: Tag latest for stable releases
        if: ${{ github.event.release.prerelease == false }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/main-website-react/Dockerfile
          push: true
          tags: ${{ env.IMAGE_BASE }}:latest

      - name: Output image digest
        run: echo "Digest=${{ steps.build.outputs.digest }}"

      - name: Trigger Coolify deployment via webhook
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{env.COOLIFY_URL}}/api/v1/deploy?uuid=${{secrets.COOLIFY_APP_WEB_UUID}}&force=true
          method: GET
          bearerToken: ${{secrets.COOLIFY_API_TOKEN}}